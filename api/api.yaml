openapi: 3.0.0
info:
  description: |
    This is a sample Petstore server.  You can find
    out more about Swagger at
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: 1.0.0
  title: Swagger Petstore
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ravlio/optiprism/1.0.0
  - url: https://petstore.swagger.io/v2
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
paths: { }
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
        teams:
          type: array
          items:
            type: integer
        projects:
          type: array
          items:
            type: object
            properties:
              projectId:
                type: integer
                format: int64
              role:
                type: string
        status:
          type: string
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        name:
          type: string
        sessionTimeoutSeconds:
          type: integer
        teams:
          type: array
          items:
            type: integer
        users:
          type: array
          items:
            type: integer
    Organization:
      type: object
      properties:
        teams:
          type: array
          items:
            type: integer
        users:
          type: array
          items:
            type: integer
    Event:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        isSystem:
          type: boolean
        status:
          type: string
          enum:
            - enabled
            - disabled
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
    CustomEvent:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        isSystem:
          type: boolean
        status:
          type: string
          enum:
            - enabled
            - disabled
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
    EventProperty:
      type: object
      properties:
        id:
          type: integer
          format: int64
        eventId:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        isSystem:
          type: boolean
        status:
          type: string
          enum:
            - enabled
            - disabled
        name:
          type: string
        description:
          type: string
        displayName:
          type: string
        type:
          $ref: '#/components/schemas/DataType'
        required:
          type: boolean
        nullable:
          type: boolean
        isArray:
          type: boolean
        isDictionary:
          type: boolean
        dictionaryType:
          $ref: '#/components/schemas/DataType'
        tags:
          type: array
          items:
            type: string
    EventCustomProperty:
      type: object
      properties:
        id:
          type: integer
          format: int64
        eventId:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        isSystem:
          type: boolean
        status:
          type: string
          enum:
            - enabled
            - disabled
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/DataType'
        nullable:
          type: boolean
        isArray:
          type: boolean
        tags:
          type: array
          items:
            type: string
    UserProperty:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        isSystem:
          type: boolean
        status:
          type: string
          enum:
            - enabled
            - disabled
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/DataType'
        nullable:
          type: boolean
        isArray:
          type: boolean
        tags:
          type: array
          items:
            type: string
    UserCustomProperty:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        isSystem:
          type: boolean
        status:
          type: string
          enum:
            - enabled
            - disabled
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/DataType'
        nullable:
          type: boolean
        isArray:
          type: boolean
        tags:
          type: array
          items:
            type: string
    EventSegmentationRequest:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventSegmentationEvent'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/EventSegmentationFilter'
        breakdowns:
          type: array
          items:
            $ref: '#/components/schemas/EventSegmentationBreakdown'
        queries:
          type: array
          items:
            $ref: '#/components/schemas/EventSegmentationQuery'
        segments:
          type: array
          items:
            $ref: '#/components/schemas/EventSegmentationSegment'

    EventSegmentationEvent:
      allOf:
        - $ref: '#/components/schemas/EventRef'
        - type: object
          properties:
            filters:
              type: array
              items:
                type: object
                oneOf:
                  - $ref: '#/components/schemas/FilterByProperty'

    EventSegmentationFilter:
      type: object
      oneOf:
        - $ref: '#/components/schemas/FilterByProperty'
        - $ref: '#/components/schemas/FilterByCohort'

    EventSegmentationBreakdown:
      type: object
      oneOf:
        - $ref: '#/components/schemas/BreakdownByCommonProperty'
        - $ref: '#/components/schemas/BreakdownByEventProperty'

    EventSegmentationSegment:
      type: object
      properties:
        name:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/SegmentCondition'
    SegmentCondition:
      type: object
      oneOf:
        - $ref: '#/components/schemas/SegmentConditionHasPropertyValue'
        - $ref: '#/components/schemas/SegmentConditionHadPropertyValue'
        - $ref: '#/components/schemas/SegmentConditionDidEvent'
        - $ref: '#/components/schemas/SegmentConditionReteined'
    SegmentConditionHasPropertyValue:
      type: object
      properties:
        conditionType:
          type: string
          enum:
            - hasProperty
        propertyName:
          type: string
    SegmentConditionHadPropertyValue:
      type: object
      properties:
        conditionType:
          type: string
          enum:
            - hadProperty
        propertyName:
          type: string
    SegmentConditionDidEvent:
      type: object
      properties:
        queryType:
          type: string
          enum:
            - didEvent
        eventName:
          type: string
    SegmentConditionReteined:
      type: object
    EventSegmentationQuery:
      type: object
      oneOf:
        - $ref: '#/components/schemas/QuerySimple'
        - $ref: '#/components/schemas/QueryAggregatePerUser'
        - $ref: '#/components/schemas/QueryAggregatePropertyPerUser'
        - $ref: '#/components/schemas/QueryAggregateProperty'
    QuerySimple:
      type: object
      properties:
        queryType:
          type: string
          enum:
            - countEvents
            - countUniqueUsers
            - weeklyActiveUsers
            - monthlyActiveUsers
    QueryAggregatePerUser:
      type: object
      properties:
        queryType:
          type: string
          enum:
            - countEventsPerUser
        aggregatePerUser:
          $ref: '#/components/schemas/QueryUserAggregate'
    QueryAggregatePropertyPerUser:
      type: object
      allOf:
        - type: object
          properties:
            queryType:
              type: string
              enum:
                - aggregatePropertyPerUser
        - $ref: '#/components/schemas/PropertyRef'
        - type: object
          properties:
            aggregatePerUser:
              $ref: '#/components/schemas/QueryUserAggregate'
            aggregate:
              $ref: '#/components/schemas/QueryAggregate'
    QueryAggregateProperty:
      type: object
      allOf:
        - type: object
          properties:
            queryType:
              type: string
              enum:
                - aggregateProperty
        - $ref: '#/components/schemas/PropertyRef'
        - type: object
          properties:
            aggregate:
              $ref: '#/components/schemas/QueryAggregate'
    QueryFormula:
      type: object
      properties:
        queryType:
          type: string
          enum:
            - formula
        formula:
          type: string
    QueryUserAggregate:
      type: string
      enum:
        - sum
        - avg
        - median
        - min
        - max
        - distinctCount

    QueryAggregate:
      type: string
      enum:
        - sum
        - avg
        - median
        - min
        - max
        - distinctCount
        - 25thPercentile
        - 75thPercentile
        - 90thPercentile
        - 99thPercentile


    BreakdownByCommonProperty:
      type: object
      allOf:
        - type: object
          properties:
            breakdownType:
              type: string
              enum:
                - property
        - $ref: '#/components/schemas/PropertyRef'
    BreakdownByEventProperty:
      type: object
      allOf:
        - type: object
          properties:
            breakdownType:
              type: string
              enum:
                - property
        - $ref: '#/components/schemas/EventRef'
        - $ref: '#/components/schemas/PropertyRef'

    FilterByCohort:
      type: object
      properties:
        filterType:
          type: string
          enum:
            - cohort
        cohortId:
          type: integer
          format: int64
    FilterByProperty:
      type: object
      allOf:
        - type: object
          properties:
            filterType:
              type: string
              enum:
                - property
        - $ref: '#/components/schemas/PropertyRef'
        - type: object
          properties:
            operation:
              $ref: '#/components/schemas/Operation'
            values:
              type: array
              items:
                $ref: '#/components/schemas/Value'
    Value:
      type: object
      oneOf:
        - type: string
        - type: integer
        - type: boolean
        - type: array
          items:
            type: string
        - type: array
          items:
            type: integer
        - type: array
          items:
            type: boolean
    Operation:
      type: string
      enum:
        - "="
        - "neq"
        - "gt"
        - "gte"
        - "lt"
        - "lte"
        - "true"
        - "false"
        - "exists"
        - "empty"
        - "arr_all"
        - "arr_any"
        - "arr_none"
        - "regex"
    PropertyRef:
      type: object
      properties:
        propertyName:
          type: string
        propertyType:
          $ref: '#/components/schemas/PropertyType'
    EventRef:
      type: object
      properties:
        eventName:
          type: string
        eventType:
          $ref: '#/components/schemas/EventType'
    EventType:
      type: string
      enum:
        - regular
        - custom
    PropertyType:
      type: string
      enum:
        - event
        - eventCustom
        - user
        - userCustom
    DataType:
      type: string
      enum:
        - string
        - float64
        - int8
        - int16
        - int32
        - int64
        - uint8
        - uint16
        - uint32
        - uint64
        - boolean
    DataTypeFamily:
      type: string
      enum:
        - string
        - number
        - int8
        - int16
        - int32
        - int64
        - uint8
        - uint16
        - uint32
        - uint64
        - boolean